/* tslint:disable */
/* eslint-disable */
/**
 * Pill.City
 * API for an one-of-a-kind social network
 *
 * OpenAPI spec version: 0.0.1
 * Contact: feedback@pill.city
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Circle } from './circle';
import { Comment } from './comment';
import { MediaUrlV2 } from './media-url-v2';
import { Poll } from './poll';
import { Reaction } from './reaction';
import { ResharedPost } from './reshared-post';
import { User } from './user';
/**
 * 
 * @export
 * @interface Post
 */
export interface Post {
    /**
     * Permanent ID for the post
     * @type {string}
     * @memberof Post
     */
    id: string;
    /**
     * In epoch seconds, when the post was created
     * @type {number}
     * @memberof Post
     */
    createdAtSeconds: number;
    /**
     * 
     * @type {User}
     * @memberof Post
     */
    author: User;
    /**
     * Text content for the post
     * @type {string}
     * @memberof Post
     */
    content?: string;
    /**
     * Whether the post is publicly accessible on the server
     * @type {boolean}
     * @memberof Post
     */
    isPublic: boolean;
    /**
     * Whether the post is publicly reshareable on the server
     * @type {boolean}
     * @memberof Post
     */
    reshareable?: boolean;
    /**
     * 
     * @type {ResharedPost}
     * @memberof Post
     */
    resharedFrom?: ResharedPost | null;
    /**
     * URLs for the post's media
     * @type {Array<string>}
     * @memberof Post
     */
    mediaUrls?: Array<string>;
    /**
     * v2 media URLs for the comment's media
     * @type {Array<MediaUrlV2>}
     * @memberof Post
     */
    mediaUrlsV2?: Array<MediaUrlV2>;
    /**
     * Reactions for the post
     * @type {Array<Reaction>}
     * @memberof Post
     */
    reactions?: Array<Reaction>;
    /**
     * Comments for the post
     * @type {Array<Comment>}
     * @memberof Post
     */
    comments?: Array<Comment>;
    /**
     * Circles that the post is published in
     * @type {Array<Circle>}
     * @memberof Post
     */
    circles?: Array<Circle>;
    /**
     * Whether the post is deleted
     * @type {boolean}
     * @memberof Post
     */
    deleted?: boolean;
    /**
     * Whether the post is an update avatar post
     * @type {boolean}
     * @memberof Post
     */
    isUpdateAvatar?: boolean;
    /**
     * 
     * @type {Poll}
     * @memberof Post
     */
    poll?: Poll | null;
}
